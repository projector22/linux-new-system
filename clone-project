#!/bin/bash

##
# @author       Gareth Palmer
# @description  This script allows the @author to clone various projects for the purposes of development
# @version      1.0
##

clear

# Choose a project

check_url_setup=0

while true 
do
    echo "Choose a project"
    echo -e "1.\tLourie Registration System"
    echo -e "2.\tAlbatross School Counsellor Booking System"
    echo -e "3.\tActive Directory Tools"
    echo -e "4.\tMarks Email System"
    echo -e "5.\tLinux New System"
    echo -e "6.\tLourie Basic Framework"
    read -p "Choice: " uri_choice
    case ${uri_choice} in
        1)
        uri="@gitlab.com/projector22/lourie-registration-system.git"
        project_name="lourie-registration-system"
        check_url_setup=1
        break
        ;;

        2)
        uri="@gitlab.com/projector22/albatross-school-counsellor-booking-system.git"
        project_name="albatross-school-counsellor-booking-system"
        check_url_setup=1
        break
        ;;

        3)
        uri="@gitlab.com/projector22/active-directory-tools.git"
        project_name="active-directory-tools"
        break
        ;;

        4)
        uri="@gitlab.com/projector22/marks-email-system.git"
        project_name="marks-email-system"
        break
        ;;

        5)
        uri="@github.com/projector22/linux-new-system.git"
        project_name="linux-new-system"
        break
        ;;

        6)
        uri="@gitlab.com/projector22/lourie-basic-framework.git"
        project_name="lourie-basic-framework"
        check_url_setup=1
        break
        ;;

        *)
        echo "\nInvalid choice..."
    esac
done

# Choose a folder

while true 
do
    echo -e "\nClone into current folder or into the project's own folder"
    echo -e "1.\tCurrent folder (${PWD})"
    echo -e "2.\tProject folder (${PWD}/${project_name})"
    read -p "Choice: " folder_choice
    case ${folder_choice} in
        1)
        folder=" ."
        install_folder=${PWD}
        break
        ;;

        2)
        folder=""
        install_folder=${PWD}/${project_name}
        break
        ;;

        *)
        echo -e "\nInvalid choice..."
    esac
done

# Get the ssh key

sshkey=""

case $1 in
    -k | --key)
    ssh_key="$2"
    ;;
esac

if test -z "$ssh_key" # Check if ssh_key has been set
then
    echo -e "\n"
    read -p "Please enter your SSH Key: " ssh_key
fi

echo -e "\nExecuting command:"
echo "https://projector22:${ssh_key}${uri}${folder}"

# Execute the clone

# git clone https://projector22:${ssh_key}${uri}${folder}

if [[ $check_url_setup -eq "1" ]]
then
    echo -e "\nWould you like to set a custom local\ty/n"
    read -p "Choice: " response
    if [ $response == 'y' ] || [ $response == 'Y' ]
    then
        echo -e "\nLocal URLs can be anything as long as it has a Top Level Domain (.com, .net etc.). Note .dev is blocked by most major browsers.\nA typical example of a correct domain is example.com"
        echo "Enter the desired local URL:"
        read -p "http://" local_url

        # maybe check the URL

        echo -e "\nCreating http://$local_url ..."
        
        # 1. Copy the default.conf file
        sudo cp /etc/apache2/sites-available/000-default.conf /etc/apache2/sites-available/$local_url.conf

        config = "<VirtualHost *:80>
    ServerAdmin admin@$local_url
    ServerName $local_url
    DocumentRoot $install_folder
    ErrorLog \${APACHE_LOG_DIR}/error.log
    CustomLog \${APACHE_LOG_DIR}/access.log combined
</VirtualHost>"

    # WIP
    # https://www.digitalocean.com/community/tutorials/how-to-set-up-apache-virtual-hosts-on-ubuntu-18-04

    fi
fi